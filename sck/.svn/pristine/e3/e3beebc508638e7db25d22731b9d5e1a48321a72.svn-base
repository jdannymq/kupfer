package org.domain.sck.entity;

// Generated 21-02-2013 02:50:14 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.domain.sck.entity.emuns.TipoCuentasKupferType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;
/**
 * LcredSolicitudDm generated by hbm2java
 */
@Entity
@Table(name = "cliente_sck")
public class ClienteSck implements java.io.Serializable {
	
	private long systemId;
	private long numSolicitud;
	
	/*datos personales del cliente*/
	private String rut;
	private String nombre;
	private String giro;
	private String calle;
	private Region region;
	private Provincia provincia;
	private Comuna comuna;
	private String telefono;
	private String fax;
	private String correoElectronico;
	private String rubro;
	private Long potencialCompra;
	private String statusJuridico;
	private String zonaVenta;
	private String oficinaVenta;
	private TipoCuentasKupferType canal;
	
	/*datos de contacto*/
	private String nombreContacto;
	private String telefonoContacto;
	private String departamento;
	private String cargo;
	private String correoElectronicoContacto;
	private String observaciones;
	
	/*creacion Cliente KEX*/
	private Boolean montoFacturacionKhPotencialKex;
	private Boolean facturacionAnualMicro;
	private Boolean facturacionAnualPequena;
	private Boolean facturacionAnualMediana;
	
	/*creacion cliente GC*/
	private Boolean montoFacturacionKhPotencialGC;
	private Boolean facturacionAnualGrande;
	private Boolean facturacionOtroFaena;
	private Boolean facturacionOtroDivision;
	private Boolean facturacionOtroCompetencia;
	private Boolean facturacionOtroKds;
	private Boolean facturacionOtroKabAndAcero;

	

	public ClienteSck() {
	}

	public ClienteSck(long systemId, long numSolicitud, String rut, String nombre,
			String giro, String calle,Region region,Provincia provincia,Comuna comuna,String telefono, 
			String fax, String correoElectronico, String rubro, Long potencialCompra, String statusJuridico,
			String zonaVenta,  String oficinaVenta, TipoCuentasKupferType canal,
			String nombreContacto, String telefonoContacto,String departamento,  String cargo, String correoElectronicoContacto, String observaciones,
			Boolean montoFacturacionKhPotencialKex, Boolean facturacionAnualMicro,Boolean facturacionAnualPequena, Boolean facturacionAnualMediana,
			Boolean montoFacturacionKhPotencialGC, Boolean facturacionAnualGrande, Boolean facturacionOtroFaena, Boolean facturacionOtroDivision,
			Boolean facturacionOtroCompetencia, Boolean facturacionOtroKds, Boolean facturacionOtroKabAndAcero) {
		
		this.systemId = systemId;
		this.numSolicitud = numSolicitud;
		/*datos personales del cliente*/
		this.rut = rut;
		this.nombre = nombre;
		this.giro = giro;
		this.calle = calle;
		this.region = region;
		this.provincia = provincia;
		this.comuna = comuna;
		this.telefono = telefono;
		this.fax = fax;
		this.correoElectronico = correoElectronico;
		this.rubro = rubro;
		this.potencialCompra = potencialCompra;
		this.statusJuridico = statusJuridico;
		this.zonaVenta = zonaVenta;
		this.canal = canal;
		/*datos de contacto*/
		this.nombreContacto = nombreContacto;
		this.telefonoContacto = telefonoContacto;
		this.departamento = departamento;
		this.cargo = cargo;
		this.correoElectronicoContacto = correoElectronicoContacto;
		this.observaciones = observaciones;
		/*creacion Cliente KEX*/
		this.montoFacturacionKhPotencialKex = montoFacturacionKhPotencialKex;
		this.facturacionAnualMicro = facturacionAnualMicro;
		this.facturacionAnualPequena = facturacionAnualPequena;
		this.facturacionAnualMediana = facturacionAnualMediana;
		/*creacion cliente GC*/
		this.montoFacturacionKhPotencialGC = montoFacturacionKhPotencialGC;
		this.facturacionAnualGrande = facturacionAnualGrande;
		this.facturacionOtroFaena = facturacionOtroFaena;
		this.facturacionOtroDivision = facturacionOtroDivision;
		this.facturacionOtroCompetencia = facturacionOtroCompetencia;
		this.facturacionOtroKds = facturacionOtroKds;
		this.facturacionOtroKabAndAcero = facturacionOtroKabAndAcero;
		
	}

	@Id
	@GenericGenerator(name="clienteSckSequenceGenerator", strategy = "org.hibernate.id.enhanced.TableGenerator",
	    parameters = {
			@Parameter(name = "table_name", value = "hibernate_sequences"),
			@Parameter(name = "segment_value", value = "SEQ_CLIENTE_SCK"), 
	        @Parameter(name = "initial_value", value = "1"),
	        @Parameter(name = "increment_size", value = "1")
	    }
	)
	@GeneratedValue(generator = "clienteSckSequenceGenerator")
	@Column(name = "system_id", unique = true, nullable = false, precision = 18, scale = 0,columnDefinition = "numeric(18,0)")
	public long getSystemId() {
		return systemId;
	}
	
	public void setSystemId(long systemId) {
		this.systemId = systemId;
	}	
	
	
	@Column(name = "num_solicitud", nullable = false, precision = 18, scale = 0)
	public long getNumSolicitud() {
		return this.numSolicitud;
	}

	public void setNumSolicitud(long numSolicitud) {
		this.numSolicitud = numSolicitud;
	}

	
	
	/*datos personales del cliente*/
	
	@Column(name = "rut", length = 12)
	@Length(max = 12)
	public String getRut() {
		return this.rut;
	}
	public void setRut(String rut) {
		this.rut = rut;
	}

	@Column(name = "nombre", length = 120)
	@Length(max = 120)
	public String getNombre() {
		return this.nombre;
	}
	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "giro", length = 120)
	@Length(max = 120)
	public String getGiro() {
		return this.giro;
	}
	public void setGiro(String giro) {
		this.giro = giro;
	}
	
	@Column(name = "calle", length = 120)
	@Length(max = 120)
	public String getCalle() {
		return this.calle;
	}
	public void setCalle(String calle) {
		this.calle = calle;
	}	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "region", nullable = false)
	@NotNull
	public Region getRegion() {
		return region;
	}

	public void setRegion(Region region) {
		this.region = region;
	}		

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "provincia", nullable = true)
	@NotNull
	public Provincia getProvincia() {
		return provincia;
	}

	public void setProvincia(Provincia provincia) {
		this.provincia = provincia;
	}		
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "comuna", nullable = false)
	@NotNull
	public Comuna getComuna() {
		return comuna;
	}

	public void setComuna(Comuna comuna) {
		this.comuna = comuna;
	}	
	

	@Column(name = "telefono", length = 15)
	@Length(max = 15)
	public String getTelefono() {
		return this.telefono;
	}
	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}
	
	@Column(name = "fax", length = 15)
	@Length(max = 15)
	public String getFax() {
		return this.fax;
	}
	public void setFax(String fax) {
		this.fax = fax;
	}		

	@Column(name = "correo_electronico", length = 50)
	@Length(max = 50)
	public String getCorreoElectronico() {
		return this.correoElectronico;
	}
	public void setCorreoElectronico(String correoElectronico) {
		this.correoElectronico = correoElectronico;
	}
	
	@Column(name = "rubro", length = 50)
	@Length(max = 50)
	public String getRubro() {
		return this.rubro;
	}
	public void setRubro(String rubro) {
		this.rubro = rubro;
	}
	
	@Column(name = "potencial_compra", nullable = true, length = 15, columnDefinition = "numeric(18,0)")
	public Long getPotencialCompra() {
		return potencialCompra;
	}
	public void setPotencialCompra(Long potencialCompra) {
		this.potencialCompra = potencialCompra;
	}
	
	
	@Column(name = "status_jurido", length = 50)
	@Length(max = 50)
	public String getStatusJuridico() {
		return this.statusJuridico;
	}

	public void setStatusJuridico(String statusJuridico) {
		this.statusJuridico = statusJuridico;
	}


	@Column(name = "zona_venta", length = 50)
	@Length(max = 50)
	public String getZonaVenta() {
		return this.zonaVenta;
	}

	public void setZonaVenta(String zonaVenta) {
		this.zonaVenta = zonaVenta;
	}

	@Column(name = "oficina_venta", length = 100)
	@Length(max = 100)
	public String getOficinaVenta() {
		return this.oficinaVenta;
	}

	public void setOficinaVenta(String oficinaVenta) {
		this.oficinaVenta = oficinaVenta;
	}
	
	@Column(name = "canal", nullable = true)
	public TipoCuentasKupferType getCanal() {
		return this.canal;
	}
	public void setCanal(TipoCuentasKupferType canal) {
		this.canal = canal;
	}

	
	
	/*datos de contacto*/
	@Column(name = "nombre_contacto", length = 120)
	@Length(max = 120)
	public String getNombreContacto() {
		return this.nombreContacto;
	}
	public void setNombreContacto(String nombreContacto) {
		this.nombreContacto = nombreContacto;
	}
	@Column(name = "telefono_contacto", length = 15)
	@Length(max = 15)
	public String getTelefonoContacto() {
		return this.telefonoContacto;
	}
	public void setTelefonoContacto(String telefonoContacto) {
		this.telefonoContacto = telefonoContacto;
	}
	
	@Column(name = "departamento", length = 100)
	@Length(max = 100)
	public String getDepartamento() {
		return this.departamento;
	}

	public void setDepartamento(String departamento) {
		this.departamento = departamento;
	}

	@Column(name = "cargo", length = 100)
	@Length(max = 100)
	public String getCargo() {
		return this.cargo;
	}

	public void setCargo(String cargo) {
		this.cargo = cargo;
	}
	
	@Column(name = "correo_electronico_contacto", length = 100)
	@Length(max = 100)
	public String getCorreoElectronicoContacto() {
		return this.correoElectronicoContacto;
	}

	public void setCorreoElectronicoContacto(String correoElectronicoContacto) {
		this.correoElectronicoContacto = correoElectronicoContacto;
	}
	
	@Lob
	@Column(name = "observaciones", nullable = false, length = 65535)
	@NotNull
	@Length(max = 65535)
	public String getObservaciones() {
		return observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}
	
	/*creacion Cliente KEX*/
	
	@Column(name = "monto_facturacion_khpotencialkex", nullable = true)
	public Boolean getMontoFacturacionKhPotencialKex(){
		return montoFacturacionKhPotencialKex;
	}

	public void setMontoFacturacionKhPotencialKex(Boolean montoFacturacionKhPotencialKex) {
		this.montoFacturacionKhPotencialKex = montoFacturacionKhPotencialKex;
	}

	@Column(name = "facturacion_anual_micro", nullable = true)
	public Boolean getFacturacionAnualMicro(){
		return facturacionAnualMicro;
	}

	public void setFacturacionAnualMicro(Boolean facturacionAnualMicro) {
		this.facturacionAnualMicro = facturacionAnualMicro;
	}

	@Column(name = "facturacion_anual_pequena", nullable = true)
	public Boolean getFacturacionAnualPequena(){
		return facturacionAnualPequena;
	}

	public void setFacturacionAnualPequena(Boolean facturacionAnualPequena) {
		this.facturacionAnualPequena = facturacionAnualPequena;
	}	
	
	@Column(name = "facturacion_anual_mediana", nullable = true)
	public Boolean getFacturacionAnualMediana(){
		return facturacionAnualMediana;
	}

	public void setFacturacionAnualMediana(Boolean facturacionAnualMediana) {
		this.facturacionAnualMediana = facturacionAnualMediana;
	}	

	
	/*creacion cliente GC*/
	@Column(name = "monto_facturacion_khpotencialgc", nullable = true)
	public Boolean getMontoFacturacionKhPotencialGC(){
		return montoFacturacionKhPotencialGC;
	}

	public void setMontoFacturacionKhPotencialGC(Boolean montoFacturacionKhPotencialGC) {
		this.montoFacturacionKhPotencialGC = montoFacturacionKhPotencialGC;
	}	

	@Column(name = "facturacion_anual_grande", nullable = true)
	public Boolean getFacturacionAnualGrande(){
		return facturacionAnualGrande;
	}

	public void setFacturacionAnualGrande(Boolean facturacionAnualGrande) {
		this.facturacionAnualGrande = facturacionAnualGrande;
	}	

	@Column(name = "facturacion_otrofaena", nullable = true)
	public Boolean getFacturacionOtroFaena(){
		return facturacionOtroFaena;
	}

	public void setFacturacionOtroFaena(Boolean facturacionOtroFaena) {
		this.facturacionOtroFaena = facturacionOtroFaena;
	}	

	@Column(name = "facturacion_otrodivision", nullable = true)
	public Boolean getFacturacionOtroDivision(){
		return facturacionOtroDivision;
	}

	public void setFacturacionOtroDivision(Boolean facturacionOtroDivision) {
		this.facturacionOtroDivision = facturacionOtroDivision;
	}	

	@Column(name = "facturacion_otrocompetencia", nullable = true)
	public Boolean getFacturacionOtroCompetencia(){
		return facturacionOtroCompetencia;
	}

	public void setFacturacionOtroCompetencia(Boolean facturacionOtroCompetencia) {
		this.facturacionOtroCompetencia = facturacionOtroCompetencia;
	}		
	
	@Column(name = "facturacion_otrokds", nullable = true)
	public Boolean getFacturacionOtroKds(){
		return facturacionOtroKds;
	}

	public void setFacturacionOtroKds(Boolean facturacionOtroKds) {
		this.facturacionOtroKds = facturacionOtroKds;
	}
	
	@Column(name = "facturacion_otrokabandacero", nullable = true)
	public Boolean getFacturacionOtroKabAndAcero(){
		return facturacionOtroKabAndAcero;
	}

	public void setFacturacionOtroKabAndAcero(Boolean facturacionOtroKabAndAcero) {
		this.facturacionOtroKabAndAcero = facturacionOtroKabAndAcero;
	}		
	

}
