package org.domain.sck.dto;

import org.domain.sck.entity.LcredSolicitud;
import org.domain.sck.entity.enums.TipoSolicitudCodigoType;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by mcastro on 30-04-14.
 */
public class UsuarioNivelServicioDTO {


    private List<PlanillaDTO> cumplidasList;
    private List<PlanillaDTO> noCumplidasList;
    private String username;
    private String nombre;
    private List<UsuarioNivelServicioPorTipoDTO> usuarioNivelServicioPorTipoDTOList;


    public UsuarioNivelServicioDTO(String username) {
        this.username = username;
        cumplidasList = new ArrayList<PlanillaDTO>();
        noCumplidasList = new ArrayList<PlanillaDTO>();
        usuarioNivelServicioPorTipoDTOList = new ArrayList<UsuarioNivelServicioPorTipoDTO>();
    }

    public List<PlanillaDTO> getCumplidasList() {
        return cumplidasList;
    }

    public void setCumplidasList(List<PlanillaDTO> cumplidasList) {
        this.cumplidasList = cumplidasList;
    }

    public List<PlanillaDTO> getNoCumplidasList() {
        return noCumplidasList;
    }

    public void setNoCumplidasList(List<PlanillaDTO> noCumplidasList) {
        this.noCumplidasList = noCumplidasList;
    }

    public String getUsername() {
    	if(username == null)
    		username = "";
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getNombre() {
    	if(nombre == null)
    		nombre = "";
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public List<UsuarioNivelServicioPorTipoDTO> getUsuarioNivelServicioPorTipoDTOList() {
        return usuarioNivelServicioPorTipoDTOList;
    }

    public void setUsuarioNivelServicioPorTipoDTOList(List<UsuarioNivelServicioPorTipoDTO> usuarioNivelServicioPorTipoDTOList) {
        this.usuarioNivelServicioPorTipoDTOList = usuarioNivelServicioPorTipoDTOList;
    }

    public Integer getTotal() {
        return cumplidasList.size() + noCumplidasList.size();
    }

    public UsuarioNivelServicioPorTipoDTO getTipoByType(TipoSolicitudCodigoType tipoSolicitudCodigoType) {
        for(UsuarioNivelServicioPorTipoDTO u : usuarioNivelServicioPorTipoDTOList) {
            if(u.getTipoSolicitudCodigoType().equals(tipoSolicitudCodigoType)) {
                return u;
            }
        }
        return null;
    }

    public String getPorcentajeCumplidas() {
        Double resultado;
        try {
            resultado = new Double((double) cumplidasList.size() / (double) getTotal());
        }catch (Exception e) {
            resultado = new Double(0d);
        }
        resultado = resultado * 100;
        return Math.round((resultado))  + "%";
    }

    public String getPorcentajeNoCumplidas() {
        Double resultado;
        try {
            resultado = new Double((double) noCumplidasList.size() / (double) getTotal());
        }catch (Exception e) {
            resultado = new Double(0d);
        }
        resultado = resultado * 100;
        return Math.round((resultado))  + "%";
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        UsuarioNivelServicioDTO that = (UsuarioNivelServicioDTO) o;
        if(username == null) 
        	return false;
        if (!username.equals(that.username)) return false;

        return true;
    }

    @Override
    public int hashCode() {
        return username.hashCode();
    }
}
