package org.domain.sck.entity;

// Generated 02-10-2012 09:54:39 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * SolicitudAprobaRechaza generated by hbm2java
 */
@Entity
@Table(name = "solicitud_aprobar_rechazar")
public class SolicitudAprobaRechaza {

	private long idSystem;
	private Long idSolicitud;
	private Usuariosegur aprobador;
	private LcredCargos cargo;
	private LcredEstado estado;
	private Boolean confirmacion; 
	private String observaciones;
	
	
	public SolicitudAprobaRechaza() {
		
	}

	public SolicitudAprobaRechaza(long idSystem, Long solicitud,Usuariosegur aprobador, 
			LcredEstado estado,String observaciones, LcredCargos cargo) {
		this.idSystem = idSystem;
		this.idSolicitud = solicitud;
		this.aprobador = aprobador;
		this.estado = estado;
		this.observaciones = observaciones;
		this.cargo = cargo;


	}

	@Id
	@GenericGenerator(name = "solicitudAprobarRechazaSequenceGenerator", strategy = "org.hibernate.id.enhanced.TableGenerator", parameters = {
			@Parameter(name = "table_name", value = "hibernate_sequences"),
			@Parameter(name = "segment_value", value = "SEQ_SOLICITUD_APROBA_RECHAZA"),
			@Parameter(name = "initial_value", value = "1"),
			@Parameter(name = "increment_size", value = "1") })
	@GeneratedValue(generator = "solicitudAprobarRechazaSequenceGenerator")
	@Column(name = "idSystem", unique = true, nullable = false, precision = 18, scale = 0)
	public Long getIdSystem() {
		return this.idSystem;
	}

	public void setIdSystem(long idSystem) {
		this.idSystem = idSystem;
	}
	
	@Column(name = "solicitud_id", nullable = false, precision = 18, scale = 0)
	public Long getIdSolicitud() {
		return idSolicitud;
	}


	public void setIdSolicitud(Long idSolicitud) {
		this.idSolicitud = idSolicitud;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "aprobador_username", nullable = false)
	@NotNull
	public Usuariosegur getAprobador() {
		return aprobador;
	}

	public void setAprobador(Usuariosegur aprobador) {
		this.aprobador = aprobador;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cargo_id", nullable = false)
	@NotNull
	public LcredCargos getCargo() {
		return cargo;
	}

	public void setCargo(LcredCargos cargo) {
		this.cargo = cargo;
	}	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "estado_id", nullable = false)
	@NotNull
	public LcredEstado getEstado() {
		return estado;
	}

	public void setEstado(LcredEstado estado) {
		this.estado = estado;
	}


	@Lob
	@Column(name = "observaciones", nullable = false, length = 65535)
	@NotNull
	@Length(max = 65535)
	public String getObservaciones() {
		return observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}	
	

	@Column(name = "confirmacion", nullable = true)
	public Boolean getConfirmacion() {
		return this.confirmacion;
	}

	public void setConfirmacion(Boolean confirmacion) {
		this.confirmacion = confirmacion;
	}
	
}
