package org.domain.sck.entity;


// Generated 29-05-2012 04:33:41 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.domain.sck.entity.enums.TiempoType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.NotNull;


/**
 * CondicionTipoSolicitudRango generated by hbm2java
 */
@Entity
@Table(name = "condicion_tiposolicitud_rango")
public class CondicionTipoSolicitudRango  {

	private long systemId;
	private LcredTipoSolicitud tipoSolicitud;
	private MedicionCanalRango medicionCanalRango;
	private TiempoType tiempo;
	private Long dias;
	private Long horas;
	private Long minutosTotales; 
	private boolean disabled;


	public CondicionTipoSolicitudRango() {
		disabled = false;
	}

	public CondicionTipoSolicitudRango(long systemId) {
		this.systemId = systemId;
	}

	@Id
	@GenericGenerator(name="condTipoSolRangoSequenceGenerator", strategy = "org.hibernate.id.enhanced.TableGenerator",
	    parameters = {
			@Parameter(name = "table_name", value = "hibernate_sequences"),
			@Parameter(name = "segment_value", value = "SEQ_CONDICION_TIPOSOL_RANGO"), 
	        @Parameter(name = "initial_value", value = "1"),
	        @Parameter(name = "increment_size", value = "1")
	    }
	)
	@GeneratedValue(generator = "condTipoSolRangoSequenceGenerator")
	@Column(name = "system_id", unique = true, nullable = false, precision = 18, scale = 0,columnDefinition = "numeric(18,0)")
	public long getSystemId() {
		return this.systemId;
	}

	public void setSystemId(long systemId) {
		this.systemId = systemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_solicitud_id", nullable = true)
	@NotNull	
	public LcredTipoSolicitud getTipoSolicitud() {
		return tipoSolicitud;
	}

	public void setTipoSolicitud(LcredTipoSolicitud tipoSolicitud) {
		this.tipoSolicitud = tipoSolicitud;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "medicion_canal_rango_id", nullable = false)
	public MedicionCanalRango getMedicionCanalRango() {
		return medicionCanalRango;
	}

	public void setMedicionCanalRango(MedicionCanalRango medicionCanalRango) {
		this.medicionCanalRango = medicionCanalRango;
	}
	
	
	@Column(name = "tiempo", nullable = true)
	public TiempoType getTiempo() {
		return tiempo;
	}
	
	public void setTiempo(TiempoType tiempo) {
		this.tiempo = tiempo;
	}
	

	@Column(name = "dias", precision = 4, scale = 0)
	public Long getDias() {
		return this.dias;
	}

	public void setDias(Long dias) {
		this.dias = dias;
	}
	
	@Column(name = "horas", precision = 4, scale = 0)
	public Long getHoras() {
		return this.horas;
	}

	public void setHoras(Long horas) {
		this.horas = horas;
	}	
	

	@Column(name = "minutos_totales", precision = 4, scale = 0)
	public Long getMinutosTotales() {
		return this.minutosTotales;
	}

	public void setMinutosTotales(Long minutosTotales) {
		this.minutosTotales = minutosTotales;
	}
	
	@Column(name = "disabled", nullable = false)
	public boolean isDisabled() {
		return disabled;
	}
	
	public void setDisabled(boolean disabled) {
		this.disabled = disabled;
	}
	
}
